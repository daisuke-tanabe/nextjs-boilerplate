import NextHead from 'next/head';
import NextLink from 'next/link';
import { ReactElement } from 'react';

import { MainLayout } from '../components/Layout';
import { booksQuery, type Books } from '../hooks/useBooksQuery';
import { useUserQuery } from '../hooks/useUserQuery';
import apolloClient from '../lib/apolloClient';

type HomeProps = {
  booksData: Books;
};
const Home = ({ booksData }: HomeProps) => {
  const { data: userData, loading } = useUserQuery();

  return (
    <>
      <NextHead>
        <title>Next.js Boilerplate</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/public/favicon.ico" />
      </NextHead>

      <h1>Next.js Boilerplate</h1>

      <h2>BEから適当な情報を取得(プリレンダリング)</h2>
      <p>以下はSSRで表示している情報</p>
      {booksData &&
        booksData?.books.map(({ id, title, author }) => {
          return (
            <div key={id}>
              {title}, {author}
            </div>
          );
        })}

      <h2>BEにATを渡し、それを復号した一部ユーザー情報を返却</h2>
      {!loading &&
        userData?.user &&
        Object.entries(userData.user).map(([key, value]) => (
          <div key={key}>
            {key}:&nbsp;{value}
          </div>
        ))}

      <div>
        <NextLink href="/content">to Content Page</NextLink>
      </div>

      <div>
        <NextLink href="/dashboard">to Dashboard Page</NextLink>
      </div>
    </>
  );
};

export const getServerSideProps = async () => {
  const { data: booksData } = await apolloClient.query({
    query: booksQuery,
  });

  return {
    props: {
      booksData,
    },
  };
};

Home.getLayout = (page: ReactElement) => <MainLayout>{page}</MainLayout>;

export default Home;
